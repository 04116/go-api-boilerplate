apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "microservice.fullname" . }}
  namespace: {{ $.Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "microservice.name" . }}
    helm.sh/chart: {{ include "microservice.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "microservice.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "microservice.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name | default (printf "%s" (include "app.fullname" $))}}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          {{- range .Values.service.ports }}
          - name: {{ .name }}
            containerPort: {{ .internalPort }}
          {{- end }}
          {{- if .Values.volumeMounts }}
          volumeMounts:
          {{- range .Values.volumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
          {{- end }}
          {{- end }}
          {{- if ( or .Values.envFromSecretRefs .Values.envFromConfigMapRefs ) }}
          envFrom:
            {{- range .Values.envFromSecretRefs }}
            - secretRef:
                name: {{ . }}
            {{- end }}
            {{- range .Values.envFromConfigMapRefs }}
            - configMapRef:
                name: {{ . }}
            {{- end }}
          {{- end }}
          {{- if .Values.env }}
          env:
            {{ toYaml .Values.env | nindent 12 }}
          {{- end }}
          {{- with .Values.readiness }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.liveness }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- if .Values.initContainers }}
      initContainers:
      {{- range .Values.initContainers }}
        - name: {{ .name }}
          image: "{{ .image.repository }}:{{ .image.tag }}"
          imagePullPolicy: {{ .image.pullPolicy }}
          command:
            {{- toYaml .command | nindent 12 }}
          args:
            {{- toYaml .args | nindent 12 }}
          {{- if .volumeMounts }}
          volumeMounts:
          {{- range .volumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
          {{- end }}
          {{- end }}
      {{- end }}
      {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
