// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// DispatchCommandRequest is passed when dispatching
type DispatchCommandRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DispatchCommandRequest) Reset()         { *m = DispatchCommandRequest{} }
func (m *DispatchCommandRequest) String() string { return proto.CompactTextString(m) }
func (*DispatchCommandRequest) ProtoMessage()    {}
func (*DispatchCommandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_fababda4f9818679, []int{0}
}
func (m *DispatchCommandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DispatchCommandRequest.Unmarshal(m, b)
}
func (m *DispatchCommandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DispatchCommandRequest.Marshal(b, m, deterministic)
}
func (dst *DispatchCommandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DispatchCommandRequest.Merge(dst, src)
}
func (m *DispatchCommandRequest) XXX_Size() int {
	return xxx_messageInfo_DispatchCommandRequest.Size(m)
}
func (m *DispatchCommandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DispatchCommandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DispatchCommandRequest proto.InternalMessageInfo

func (m *DispatchCommandRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DispatchCommandRequest) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*DispatchCommandRequest)(nil), "proto.DispatchCommandRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	DispatchCommand(ctx context.Context, in *DispatchCommandRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) DispatchCommand(ctx context.Context, in *DispatchCommandRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.User/DispatchCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	DispatchCommand(context.Context, *DispatchCommandRequest) (*empty.Empty, error)
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_DispatchCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DispatchCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).DispatchCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.User/DispatchCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).DispatchCommand(ctx, req.(*DispatchCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DispatchCommand",
			Handler:    _User_DispatchCommand_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_user_fababda4f9818679) }

var fileDescriptor_user_fababda4f9818679 = []byte{
	// 185 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x2d, 0x4e, 0x2d,
	0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x52, 0xd2, 0xe9, 0xf9, 0xf9, 0xe9,
	0x39, 0xa9, 0xfa, 0x60, 0x5e, 0x52, 0x69, 0x9a, 0x7e, 0x6a, 0x6e, 0x41, 0x49, 0x25, 0x44, 0x8d,
	0x92, 0x1b, 0x97, 0x98, 0x4b, 0x66, 0x71, 0x41, 0x62, 0x49, 0x72, 0x86, 0x73, 0x7e, 0x6e, 0x6e,
	0x62, 0x5e, 0x4a, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x10, 0x17, 0x4b, 0x5e, 0x62,
	0x6e, 0xaa, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x98, 0x2d, 0x24, 0xc1, 0xc5, 0x5e, 0x90,
	0x58, 0x99, 0x93, 0x9f, 0x98, 0x22, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x13, 0x04, 0xe3, 0x1a, 0x05,
	0x70, 0xb1, 0x84, 0x16, 0xa7, 0x16, 0x09, 0x79, 0x70, 0xf1, 0xa3, 0x99, 0x27, 0x24, 0x0b, 0xb1,
	0x4a, 0x0f, 0xbb, 0x3d, 0x52, 0x62, 0x7a, 0x10, 0xf7, 0xe9, 0xc1, 0xdc, 0xa7, 0xe7, 0x0a, 0x72,
	0x9f, 0x93, 0x0c, 0x17, 0x6f, 0x66, 0xbe, 0x5e, 0x7a, 0x51, 0x41, 0x32, 0x44, 0xc6, 0x89, 0x13,
	0x64, 0x41, 0x00, 0x88, 0x19, 0xc0, 0x98, 0xc4, 0x06, 0x16, 0x33, 0x06, 0x04, 0x00, 0x00, 0xff,
	0xff, 0xc2, 0x45, 0xbb, 0x2e, 0xf0, 0x00, 0x00, 0x00,
}
